const enquiry = document.getElementById("enquiry");
const city = document.getElementById("city")
const country = document.getElementById("country");
const datepicker = document.getElementById('date');

let today = new Date();
datepicker.value = today.toISOString().split('T')[0]

const countries = ["Ireland"]
const dublinRegion = ["Dublin 1", "Dublin 2", "Dublin 3", "Dublin 4", "Dublin 5", "Dublin 6", "Dublin 6w", "Dublin 7", "Dublin 8", "Dublin 9", "Dublin 10", "Dublin 11", "Dublin 12", "Dublin 13", "Dublin 14", "Dublin 15", "Dublin 16", "Dublin 17", "Dublin 18", "Dublin 20", "Dublin 22", "Dublin 24"]

const cityDict = {
    "Dublin": dublinRegion
}

const requiredFields = ["address1", "city", "country", "bedroom", "bathroom", "propertySize", "propertyType", "year"];

function loadSelecSubValues(select, dict) {
    for (let key in dict) {
        let optgroup = document.createElement("optgroup");
        optgroup.label = key;
        for (let i in dict[key]) {
            let option = document.createElement("option");
            option.value = dict[key][i];
            option.innerHTML = dict[key][i];
            optgroup.appendChild(option);
        }
        select.appendChild(optgroup);
    }
}

function loadSelectValues(select, arr) {
    for (let i in arr) {
        let option = document.createElement("option");
        option.value = arr[i];
        option.innerHTML = arr[i];
        select.appendChild(option);
    }
}
    

var init = (function(){
    loadSelectValues(country, countries);
    loadSelecSubValues(city, cityDict);
}())

enquiry.addEventListener("click", function(){

    let data = {};

    storeTextOrTriggerError("property-name", data, "name");
    storeTextOrTriggerError("address-1", data, "address1");
    storeTextOrTriggerError("city", data, "city");
    storeTextOrTriggerError("country", data, "country");
    storeYearOrTriggerError("date", data, "year", 2000);
    storeNumberOrTriggerError("num-bedroom", data, "bedroom", 0);
    storeNumberOrTriggerError("num-bathroom", data, "bathroom", 0);
    storeNumberOrTriggerError("living-area", data, "propertySize", 0);
    
    data["propertyType"] = getTagValue("property-type");
    let address_2 = removeHTML(getElementValue("address-2"));
    
    const postalcode = removeHTML(getElementValue("postal-code"));
	
    data["address2"] = address_2;
    
    data["user"] = {"name": "John Doe", "email": "john@email.com", "userRole": "USER"}
    data["token"] = getElementValue("token");

    if(isKeysInDict(data, requiredFields)){
        alrtMessage.innerHTML = "Successfully filled out.";
        swapAlert("alert-success", "alert-warning");

        console.log(typeof data)
        console.log(JSON.stringify(data));

        sendRequest("POST", "http://localhost:8080/api/v1/prediction", data)
        .then(function(response){
            console.log(response);
            if(response.message == "success"){
                alrtMessage.innerHTML = "Successfully predicted.";
                swapAlert("alert-success", "alert-warning");
				
				console.log("Property Type: ", typeof data["propertyType"]);
                const propertyStringType = propertyValueOf(data["propertyType"]);
                const price = Number(response['data']['price']).toFixed(2);
                
                const param =  `name=${data["name"]}&address1=${data["address1"]}&country=${data["country"]}&year=${data["year"]}&bedroom=${data["bedroom"]}&bathroom=${data["bathroom"]}&propertySize=${data["propertySize"]}&propertyType=${data["propertyType"]}&propertyStringType=${propertyStringType}&price=${price}`;
                window.location.href = "http://localhost:8080/summary?" + param;
                
            }
            else{
                alrtMessage.innerHTML = "Failed to predict. The Address might not exist or other problem happened.";
                swapAlert("alert-warning", "alert-success");
            }
        }).catch(() => {
            alrtMessage.innerHTML = "Server is not responding or you don't have any conection.";
            swapAlert("alert-warning", "alert-success");
        })
        
    } else {
        alrtMessage.innerHTML = "Please fill in all the required fields.";
        swapAlert("alert-warning", "alert-success");
    }

})

function propertyValueOf(code) {
    if (code == 0)
        return "Apartment";
    if (code == 1)
        return "Bungalow";
    if (code == 2)
        return "Detached";
    if (code == 3)
        return "Duplex";
    if (code == 4)
        return "End of Terrace";
    if (code == 5)
        return "House";
    if (code == 6)
        return "Semi-D";
    if (code == 7)
        return "Site";
    if (code == 8)
        return "Studio";
    if (code == 9)
        return "Terrace";
    if (code == 10)
        return "Townhouse";
    else
        return "Unknown";
}